package project;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.FlowLayout;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.ChangeEvent;

public class NumView implements MancalaView {
   private JPanel p1Pits = new JPanel();
   private JPanel p2Pits = new JPanel();
   private GameButton p1Mancala = new GameButton(this, (MancalaController)null, "", 100, 150, 1, 6);
   private GameButton p2Mancala = new GameButton(this, (MancalaController)null, "", 100, 150, 2, 6);
   private JPanel boardview = new JPanel();
   private JFrame frame;
   private JLabel currentturn;

   public NumView(MancalaController controller) {
      this.boardview.setLayout(new BorderLayout());
      this.p1Pits.setLayout(new FlowLayout());
      this.p2Pits.setLayout(new FlowLayout());

      for(int i = 0; i < 6; ++i) {
         GameButton p1butt = new GameButton(this, controller, "", 80, 50, 1, i);
         GameButton p2butt = new GameButton(this, controller, "", 80, 50, 2, 5 - i);
         this.p1Pits.add(p1butt);
         this.p2Pits.add(p2butt);
      }

      this.p1Pits.setPreferredSize(new Dimension(500, 60));
      this.p2Pits.setPreferredSize(new Dimension(500, 60));
      this.boardview.add(this.p1Mancala, "East");
      this.boardview.add(this.p2Mancala, "West");
      this.boardview.add(this.p1Pits, "South");
      this.boardview.add(this.p2Pits, "North");
      JComponent labels = new JPanel();
      labels.setLayout(new BorderLayout());
      JLabel p1pits = new JLabel("P1 Pits", 0);
      p1pits.setLocation(200, 50);
      JLabel p2pits = new JLabel("P2 Pits", 0);
      JLabel p1mancala = new JLabel("P1 Mancala");
      JLabel p2mancala = new JLabel("P2 Mancala");
      labels.add(p1pits, "South");
      labels.add(p2pits, "North");
      labels.add(p1mancala, "East");
      labels.add(p2mancala, "West");
      this.currentturn = new JLabel();
      this.currentturn.setHorizontalAlignment(0);
      labels.add(this.currentturn, "Center");
      this.boardview.add(labels, "Center");
      this.frame = new JFrame();
      this.frame.setSize(700, 300);
      this.frame.setResizable(false);
      this.frame.setTitle("Simple View");
      this.frame.add(this.boardview);
      this.frame.setVisible(true);
      this.frame.setDefaultCloseOperation(2);
   }

   public void stateChanged(ChangeEvent event) {
      MancalaModel model = (MancalaModel)event.getSource();
      int[] p1board = model.getp1board();
      int[] p2board = model.getp2board();
      Component[] b1 = this.p1Pits.getComponents();
      Component[] b2 = this.p2Pits.getComponents();

      for(int i = 0; i < b1.length && i < b2.length; ++i) {
         JButton jb1 = (JButton)b1[i];
         this.updateButton(jb1, p1board[i]);
         JButton jb2 = (JButton)b2[i];
         this.updateButton(jb2, p2board[5 - i]);
      }

      this.updateButton(this.p1Mancala, p1board[6]);
      this.updateButton(this.p2Mancala, p2board[6]);
      if (model.isDone()) {
         if (p1board[p1board.length - 1] > p2board[p2board.length - 1]) {
            JOptionPane.showMessageDialog(this.boardview, "Player 1 Wins!", "Congratulations!", 1);
         } else if (p1board[p1board.length - 1] > p2board[p2board.length - 1]) {
            JOptionPane.showMessageDialog(this.boardview, "Everyone Loses!", "Draw!", 1);
         } else {
            JOptionPane.showMessageDialog(this.boardview, "Player 2 Wins!", "Congratulations!", 1);
         }
      }

      if (model.getCurrentPlayer() == 1) {
         this.currentturn.setText("Currently: P1's turn.");
      } else {
         this.currentturn.setText("Currently: P2's turn.");
      }

   }

   public void updateButton(JButton button, int data) {
      button.setText(String.valueOf(data));
   }

   public String getPitTextColor() {
      return "#000000";
   }

   public void close() {
      this.frame.dispose();
   }
}
